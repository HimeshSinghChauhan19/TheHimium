{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\REACT\\\\react-portfolio-website-master\\\\react-portfolio-website-master\\\\portfolio-try\\\\src\\\\pages\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Sectiontitle from \"../components/Sectiontitle\";\nimport Layout from \"../components/Layout\";\nimport Pagination from \"../components/Pagination\";\nimport PortfoliosView from \"../components/PortfoliosView\";\nimport database from '../data/db/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projects() {\n  _s();\n  // const [portfolios, setPortfoios] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [portfoliosPerPage] = useState(9);\n  const portfolios = database.portfolios;\n\n  // manually doing the axios.get work instead of getting the data through API\n\n  // useEffect(() => {\n  //   axios.get('/api/portfolios')\n  //     .then( response => {\n  //       setPortfoios(response.data);\n  //     })\n  // }, [portfolios]);\n\n  const indexOfLastPortfolios = currentPage * portfoliosPerPage;\n  const indexOfFirstPortfolios = indexOfLastPortfolios - portfoliosPerPage;\n  const currentPortfolios = portfolios.slice(indexOfFirstPortfolios, indexOfLastPortfolios);\n  const paginate = (e, pageNumber) => {\n    e.preventDefault();\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Projects, \"2ZS+9InvLbwDQNYmyYJ9GucZmYk=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useState","useEffect","axios","Sectiontitle","Layout","Pagination","PortfoliosView","database","jsxDEV","_jsxDEV","Projects","_s","currentPage","setCurrentPage","portfoliosPerPage","portfolios","indexOfLastPortfolios","indexOfFirstPortfolios","currentPortfolios","slice","paginate","e","pageNumber","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/REACT/react-portfolio-website-master/react-portfolio-website-master/portfolio-try/src/pages/Projects.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Sectiontitle from \"../components/Sectiontitle\";\nimport Layout from \"../components/Layout\";\nimport Pagination from \"../components/Pagination\";\nimport PortfoliosView from \"../components/PortfoliosView\";\nimport database from '../data/db/database';\n\nfunction Projects() {\n  // const [portfolios, setPortfoios] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [portfoliosPerPage] = useState(9);\n  const portfolios=database.portfolios;\n\n  // manually doing the axios.get work instead of getting the data through API\n\n  // useEffect(() => {\n  //   axios.get('/api/portfolios')\n  //     .then( response => {\n  //       setPortfoios(response.data);\n  //     })\n  // }, [portfolios]);\n\n  const indexOfLastPortfolios = currentPage * portfoliosPerPage;\n  const indexOfFirstPortfolios = indexOfLastPortfolios - portfoliosPerPage;\n  const currentPortfolios = portfolios.slice(indexOfFirstPortfolios, indexOfLastPortfolios);\n\n  const paginate = (e, pageNumber) => {\n    e.preventDefault();\n    setCurrentPage(pageNumber);\n  }\n\n  return (\n    <Layout>\n      {/* <div className=\"mi-about mi-section mi-padding-top mi-padding-bottom\">\n        <div className=\"container\">\n          <Sectiontitle title=\"Projects\" />\n          <PortfoliosView portfolios={currentPortfolios}/>\n          {!(portfolios.length > portfoliosPerPage) ? null : (\n            <Pagination \n              className=\"mt-50\"\n              itemsPerPage={portfoliosPerPage}\n              totalItems={portfolios.length}\n              paginate={paginate}\n              currentPage={currentPage}\n            />\n          )}\n        </div>\n      </div> */}\n    </Layout>\n  );\n}\n\nexport default Projects;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,QAAQ,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACc,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAMe,UAAU,GAACR,QAAQ,CAACQ,UAAU;;EAEpC;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,qBAAqB,GAAGJ,WAAW,GAAGE,iBAAiB;EAC7D,MAAMG,sBAAsB,GAAGD,qBAAqB,GAAGF,iBAAiB;EACxE,MAAMI,iBAAiB,GAAGH,UAAU,CAACI,KAAK,CAACF,sBAAsB,EAAED,qBAAqB,CAAC;EAEzF,MAAMI,QAAQ,GAAGA,CAACC,CAAC,EAAEC,UAAU,KAAK;IAClCD,CAAC,CAACE,cAAc,CAAC,CAAC;IAClBV,cAAc,CAACS,UAAU,CAAC;EAC5B,CAAC;EAED,oBACEb,OAAA,CAACL,MAAM;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAgBC,CAAC;AAEb;AAAChB,EAAA,CA3CQD,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}